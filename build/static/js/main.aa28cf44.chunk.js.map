{"version":3,"sources":["images/class-notes-logo-2.png","StateProvider.js","Header.js","firebase.js","SidebarOption.js","Sidebar.js","Message.js","ChatInput.js","Chat.js","reducer.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","user","className","Avatar","alt","displayName","src","photoURL","Input","placeholder","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarOption","Icon","title","id","addChannelOption","history","useHistory","onClick","channelName","prompt","collection","add","name","push","Sidebar","useState","channels","setChannels","useEffect","onSnapshot","snapshot","docs","map","doc","data","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","channel","Message","message","timestamp","userImage","Date","toDate","toUTCString","ChatInput","channelId","input","setInput","onChange","event","target","type","preventDefault","FieldValue","serverTimestamp","Chat","roomId","useParams","roomDetails","setRoomDetails","roomMessages","setRoomMessages","orderBy","actionTypes","state","action","console","log","Login","dispatch","Logo","Button","signInWithPopup","then","result","catch","error","alert","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa28cf44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/class-notes-logo-2.fffe2ed2.png\";","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React from 'react';\nimport './Header.css';\nimport { Avatar, Input } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport { useStateValue } from './StateProvider';\n\n\n\nfunction Header(){\n  const [{ user }] = useStateValue();\n\n  return (\n    <div className=\"header\">\n      <div className=\"header-left\">\n        <Avatar className=\"header-avatar\" alt={user?.displayName} src={user?.photoURL} />\n        <AccessTimeIcon />\n      </div>\n      <div className=\"header-search\">\n        <SearchIcon/>\n        <Input placeholder=\"Search Here Dumb Ass\" />\n      </div>\n      <div className=\"header-right\">\n        <HelpOutlineIcon />\n      </div>\n    </div>\n  )\n}\n\nexport default Header;\n","import firebase from 'firebase';\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD-boFJiNKWUuThg9SiuzLTJ6oAHmgenj8\",\n  authDomain: \"chat-app-2221a.firebaseapp.com\",\n  databaseURL: \"https://chat-app-2221a.firebaseio.com\",\n  projectId: \"chat-app-2221a\",\n  storageBucket: \"chat-app-2221a.appspot.com\",\n  messagingSenderId: \"1068041824610\",\n  appId: \"1:1068041824610:web:c5bfbf59cf9eeba9f2e43b\",\n  measurementId: \"G-DC5GWP6QVJ\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","import React from 'react';\nimport './SidebarOption.css';\nimport { useHistory } from 'react-router-dom';\nimport db from './firebase';\n\nfunction SidebarOption({ Icon, title, id,  addChannelOption }) {\n  const history = useHistory();\n\n  const selectChannel = () => {\n    if (id) {\n      history.push(`/room/${id}`)\n    } else{\n      history.push(title);\n    }\n  }\n\n  const addChannel = () => {\n\n    const channelName = prompt('Please Enter a Channel Name')\n\n    if(channelName){\n      db.collection('rooms').add({\n        name: channelName,\n      });\n    }\n  };\n\n\n  return (\n    <div className='sidebar-option' onClick={addChannelOption ? addChannel : selectChannel }>\n      {Icon && <Icon className='sidebar-option-icon' />}\n      {Icon ? <h3>{title}</h3> : <h3 className='sidebar-option-channel'><span className='sidebar-hashtag'>#</span> {title}</h3>}\n    </div>\n\n  )\n}\n\nexport default SidebarOption;\n","import React, { useState, useEffect } from 'react';\nimport './Sidebar.css';\nimport FiberManualRecodIcon from '@material-ui/icons/FiberManualRecord';\nimport CreateIcon from '@material-ui/icons/Create';\nimport SidebarOption from './SidebarOption';\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport db from './firebase';\nimport { useStateValue } from './StateProvider';\n\n\nfunction Sidebar() {\n  const [{ user }] = useStateValue();\n\n  const [channels, setChannels] = useState([]);\n\n  useEffect(()=>{\n\n    db.collection('rooms').onSnapshot(snapshot => (\n      setChannels(\n        snapshot.docs.map(doc => ({\n          id: doc.id,\n          name: doc.data().name\n        }))\n      )\n    ));\n  },[]);\n\n  return (\n    <div className=\"sidebar\">\n      <div className='sidebar-header'>\n        <div className='sidebar-info'>\n          <h2>Name</h2>\n          <h3>\n            <FiberManualRecodIcon />\n            {user?.displayName}\n      </h3>\n        </div>\n        <CreateIcon />\n      </div>\n      <SidebarOption Icon = {InsertCommentIcon} title='Threads' />\n      <SidebarOption Icon={InboxIcon} title='Mentions &amp; Reactions' />\n      <SidebarOption Icon={DraftsIcon} title='Saved Items' />\n      <SidebarOption Icon={BookmarkBorderIcon} title='Channel Browser' />\n      <SidebarOption Icon={PeopleAltIcon} title='People &amp; User Groups'/>\n      <SidebarOption Icon={AppsIcon} title='Apps' />\n      <SidebarOption Icon={FileCopyIcon} title='File Browser' />\n      <SidebarOption Icon={ExpandLessIcon} title='Show Less' />\n      <hr/>\n      <SidebarOption Icon={ExpandMoreIcon} title='Channels'/>\n      <hr />\n      <SidebarOption Icon={AddIcon} title='Add Channel' addChannelOption/>\n      {channels.map(channel => (\n        <SidebarOption title={channel.name} id={channel.id} />\n      ))}\n    </div>\n\n\n  )\n\n\n\n}\n\nexport default Sidebar\n","import React from 'react';\nimport './Message.css'\n\nfunction Message ({ message, timestamp, user, userImage}){\n\nreturn(\n  <div className='message'>\n    <img src={userImage} alt='' />\n    <div className='message-info'>\n      <h4>\n        {user} <span className='message-timestamp'>{new Date(timestamp?.toDate()).toUTCString()}</span>\n      </h4>\n      <p>{message}</p>\n    </div>\n  </div>\n)\n\n}\n\nexport default  Message;\n","import React, { useState } from 'react';\nimport './ChatInput.css';\nimport db from './firebase';\nimport { useStateValue } from './StateProvider';\nimport firebase from 'firebase';\n\n\nfunction ChatInput ({ channelName, channelId }){\n\n  const [input, setInput] = useState('');\n  const [{ user }] = useStateValue();\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if (channelId) {\n      db.collection('rooms').doc(channelId).collection('messages').add({\n        message: input,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        user: user.displayName,\n        userImage: user.photoURL\n      })\n    }\n    setInput('')\n  }\n\n\n  return (\n    <div className='chat-input'>\n      <form>\n        <input placeholder={`Message #${channelName}`} value={input} onChange={event=> setInput(event.target.value)}/>\n        <button type='submit' onClick={sendMessage}>Send</button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default ChatInput;\n","import React, { useEffect, useState } from 'react';\nimport db from './firebase';\nimport './Chat.css';\nimport { useParams } from 'react-router-dom';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport Message from './Message';\nimport ChatInput from './ChatInput';\n\n\nfunction Chat (){\n  const { roomId } = useParams();\n  const [roomDetails, setRoomDetails] = useState(null);\n  const [roomMessages, setRoomMessages] = useState([]);\n\n  useEffect(() => {\n    if(roomId){\n      db.collection('rooms').doc(roomId).onSnapshot(snapshot => (\n        setRoomDetails(snapshot.data())\n      ))\n    }\n\n    db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', 'asc')\n    .onSnapshot(snapshot=> setRoomMessages(\n      snapshot.docs.map(doc => doc.data())\n    ))\n  }, [roomId])\n\n  return (\n    <div className='chat'>\n      <div className='chat-header'>\n        <div className='chat-header-left'>\n          <h4 className='chat-channel-name'>\n            <strong>#{roomDetails?.name}</strong>\n            <StarBorderOutlinedIcon />\n          </h4>\n        </div>\n        <div className='chat-header-right'>\n          <p>\n            <InfoOutlinedIcon /> Details\n          </p>\n        </div>\n      </div>\n      <div className='class-messages'>\n        {roomMessages.map(({ message, timestamp, userImage, user }) => (\n          <Message\n            message={message}\n            timestamp={timestamp}\n            userImage={userImage}\n            user={user}\n          />\n        ))}\n      </div>\n      <ChatInput channelName={roomDetails?.name} channelId={roomId}/>\n    </div>\n\n  );\n}\n\nexport default Chat;\n","export const initialState = {\n  user: null,\n\n};\n\nexport const actionTypes = {\n  SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch(action.type){\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user\n      }\n    default:\n      return state;\n  }\n\n}\n\nexport default reducer;\n","import React from 'react';\nimport './Login.css';\nimport Logo from './images/class-notes-logo-2.png';\nimport {Button} from '@material-ui/core';\nimport {auth, provider} from './firebase';\nimport { useStateValue } from './StateProvider';\nimport { actionTypes } from './reducer';\n\nfunction Login(){\nconst [state, dispatch] = useStateValue();\n\nconst signIn = (event) => {\n  auth.signInWithPopup(provider)\n  .then(result => {\n    dispatch({\n      type: actionTypes.SET_USER,\n      user: result.user,\n    })\n  })\n  .catch((error)=>{\n    alert(error.message);\n  })\n}\n\n\n\n  return(\n    <div className='login'>\n      <div className='login-container'>\n        <img src={Logo} alt=''></img>\n        <h1>Sign in to Code Notes Chat</h1>\n        <Button onClick={signIn}>Sign in with Google</Button>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport  { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Chat from './Chat';\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue();\n\n\n  return (\n    <div className=\"app\">\n    <Router>\n      {!user ? (\n        <Login/>\n      )\n      :(\n        <>\n      <Header/>\n      <div className=\"app-body\">\n        <Sidebar />\n          <Switch>\n            <Route path ='/room/:roomId'>\n              <Chat />\n            </Route>\n            <Route path='/'>\n              <h1>Welcome</h1>\n            </Route>\n          </Switch>\n      </div>\n            </>\n      )}\n    </Router>\n    </div>\n\n   );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}